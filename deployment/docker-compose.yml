version: '3'

services:
  haproxy:
    image: haproxy
    container_name: lab10_haproxy
    depends_on:
      pgsql01:
        condition: service_healthy
      pgsql02:
        condition: service_healthy
      pgsql03:
        condition: service_healthy
    restart: always
    networks:
      - front
      - back
    volumes:
      - "./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg"
    ports:
      - "5433:5432"
      - "8404:8404"



  pgsql01:
    build:
      context: ./pgsql
    container_name: lab10_pgsql01
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
#    environment:
#      - PGPORT=5432
    networks:
      - back

  pgsql02:
    build:
      context: ./pgsql
    container_name: lab10_pgsql02
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
#    environment:
#      - PGPORT=5432
    networks:
      - back

  pgsql03:
    build:
      context: ./pgsql
    container_name: lab10_pgsql03
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - back



#  loaderapp:
#    build:
#      context: loader
#    container_name: lab10_loader
#    depends_on:
#      pgsql01:
#        condition: service_healthy
#      pgsql02:
#        condition: service_healthy
#      pgsql03:
#        condition: service_healthy
#    restart: always
#    tty: true
#    stdin_open: true
#    networks:
#      - front

networks:
  front:
  back: